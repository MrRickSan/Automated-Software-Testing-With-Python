{
	"info": {
		"name": "User create store and item",
		"_postman_id": "27cafba4-8f12-4036-bd2f-7bd1304c4f9e",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/register",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "d5f82f65-39f6-46dd-ad9c-cdd04c5d8abc",
						"type": "text/javascript",
						"exec": [
							"pm.environment.unset(\"access_token\");",
							"",
							"tests[\"Response time is less than 200ms\"] = responseTime < 200;",
							"",
							"//can be made as this too",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"",
							"tests[\"User created successfully\"] = jsonData.message === 'User created successfully.';",
							"",
							"pm.test(\"User created successfully\", function () {",
							"    pm.expect(pm.response.text()).to.include(\"User created successfully\");",
							"});",
							"",
							"tests[\"Content-Type is present in response\"] = postman.getResponseHeader('Content-Type');",
							"tests[\"Content-Type is 'application/json'\"] = postman.getResponseHeader('Content-Type') === 'application/json';"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "JWT"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user14\",\n\t\"password\": \"abcxyz\"\n}"
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "/auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "59004536-2f3e-485b-b8fe-0389fcbf8fb0",
						"type": "text/javascript",
						"exec": [
							"var jsonData = JSON.parse(responseBody);",
							"",
							"pm.environment.set(\"access_token\", jsonData.access_token);",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"tests[\"Body contains access_token\"] = responseBody.has(\"access_token\");",
							"",
							"",
							"",
							"pm.test(\"Response time is less than 150ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(150);",
							"});"
						]
					}
				}
			],
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					},
					{
						"key": "Authorization",
						"value": "JWT"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n\t\"username\": \"user3\",\n\t\"password\": \"abcxyz\"\n}"
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "/item/my_item",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{access_token}}"
					}
				],
				"body": {},
				"url": {
					"raw": "{{url}}/item/my_item",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"my_item"
					]
				},
				"description": ""
			},
			"response": []
		}
	]
}